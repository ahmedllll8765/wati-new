import React, { useState, useEffect } from 'react';
import {
  Search,
  ChevronDown,
  ChevronUp,
  ThumbsUp,
  ThumbsDown,
  MessageCircle,
  BookOpen,
  HelpCircle,
  Star,
  Filter,
  Tag,
  Clock,
  User,
  Eye,
  Share2,
  Bookmark,
  ExternalLink,
  FileText,
  Video,
  Download,
  Lightbulb,
  AlertCircle,
  CheckCircle,
  ArrowRight,
  Grid,
  List,
  Zap,
  TrendingUp
} from 'lucide-react';
import { FAQ, FAQCategory, FAQFeedback, SupportKnowledgeBase } from '../types';

interface FAQPageProps {
  setActivePage: (page: string) => void;
}

const FAQPage: React.FC<FAQPageProps> = ({ setActivePage }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [expandedFAQ, setExpandedFAQ] = useState<string | null>(null);
  const [viewMode, setViewMode] = useState<'grid' | 'list'>('list');
  const [sortBy, setSortBy] = useState<'relevance' | 'popularity' | 'recent' | 'helpful'>('relevance');
  const [showFilters, setShowFilters] = useState(false);
  const [selectedDifficulty, setSelectedDifficulty] = useState<string>('all');

  // ุจูุงูุงุช ููููุฉ ูููุฆุงุช
  const [categories] = useState<FAQCategory[]>([
    {
      id: 'getting-started',
      name: 'ุงูุจุฏุก',
      description: 'ููููุฉ ุงูุจุฏุก ูู ุงุณุชุฎุฏุงู ุงูููุตุฉ',
      icon: '๐',
      color: '#3B82F6',
      isActive: true,
      sortOrder: 1,
      faqCount: 12
    },
    {
      id: 'payments',
      name: 'ุงููุฏููุนุงุช',
      description: 'ูู ูุง ูุชุนูู ุจุงููุฏููุนุงุช ูุงูููุงุชูุฑ',
      icon: '๐ณ',
      color: '#10B981',
      isActive: true,
      sortOrder: 2,
      faqCount: 18
    },
    {
      id: 'projects',
      name: 'ุงููุดุงุฑูุน',
      description: 'ุฅุฏุงุฑุฉ ุงููุดุงุฑูุน ูุงูุนุฑูุถ',
      icon: '๐',
      color: '#F59E0B',
      isActive: true,
      sortOrder: 3,
      faqCount: 25
    },
    {
      id: 'freelancers',
      name: 'ุงููุณุชูููู',
      description: 'ูู ูุง ูุฎุต ุงููุณุชูููู ููููุงุชูู ุงูุดุฎุตูุฉ',
      icon: '๐ฅ',
      color: '#8B5CF6',
      isActive: true,
      sortOrder: 4,
      faqCount: 15
    },
    {
      id: 'disputes',
      name: 'ุงููุฒุงุนุงุช',
      description: 'ุญู ุงููุฒุงุนุงุช ูุงููุณุงุทุฉ',
      icon: 'โ๏ธ',
      color: '#EF4444',
      isActive: true,
      sortOrder: 5,
      faqCount: 8
    },
    {
      id: 'technical',
      name: 'ุงููุณุงุนุฏุฉ ุงูุชูููุฉ',
      description: 'ุงููุดุงูู ุงูุชูููุฉ ูุงูุญููู',
      icon: '๐ง',
      color: '#6B7280',
      isActive: true,
      sortOrder: 6,
      faqCount: 22
    }
  ]);

  // ุจูุงูุงุช ููููุฉ ููุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ
  const [faqs] = useState<FAQ[]>([
    {
      id: '1',
      question: 'ููู ูููููู ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏุ',
      answer: 'ููููู ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ ุจุณูููุฉ ูู ุฎูุงู ุงูููุฑ ุนูู ุฒุฑ "ุฅูุดุงุก ุญุณุงุจ" ูู ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ. ุณุชุญุชุงุฌ ุฅูู ุชูุฏูู ุนููุงู ุจุฑูุฏ ุฅููุชุฑููู ุตุงูุญ ูุฑูู ูุงุชู ููุชุญูู. ุจุนุฏ ุงูุชุณุฌููุ ุณุชุชููู ุฑุณุงูุฉ ุชุฃููุฏ ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุชูุนูู ุญุณุงุจู.',
      category: categories[0],
      tags: ['ุชุณุฌูู', 'ุญุณุงุจ ุฌุฏูุฏ', 'ุจุฏุงูุฉ'],
      isPublished: true,
      isPinned: true,
      viewCount: 1250,
      helpfulCount: 980,
      notHelpfulCount: 45,
      relatedFAQs: ['2', '3'],
      attachments: [],
      metadata: {
        difficulty: 'beginner',
        estimatedReadTime: 2,
        lastReviewed: new Date(),
        reviewedBy: 'admin'
      },
      searchKeywords: ['ุชุณุฌูู', 'ุญุณุงุจ', 'ุฅูุดุงุก', 'ุจุฏุงูุฉ'],
      createdBy: 'admin',
      createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 30),
      updatedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 5),
      publishedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 30)
    },
    {
      id: '2',
      question: 'ููู ูุชู ุงูุฏูุน ูู ุงูููุตุฉุ',
      answer: 'ูููุฑ ุนุฏุฉ ุทุฑู ุฏูุน ุขููุฉ ููุฑูุญุฉ:\n\n1. **ุงูุจุทุงูุงุช ุงูุงุฆุชูุงููุฉ**: Visa, Mastercard, American Express\n2. **ุงููุญุงูุธ ุงูุฑูููุฉ**: PayPal, Apple Pay, Google Pay\n3. **ุงูุชุญููู ุงูุจููู**: ูููุจุงูุบ ุงููุจูุฑุฉ\n4. **ุงูุนููุงุช ุงููุดูุฑุฉ**: Bitcoin, Ethereum (ูุฑูุจุงู)\n\nุฌููุน ุงููุฏููุนุงุช ูุญููุฉ ุจุชุดููุฑ SSL ููุธุงู ุงูุถูุงู ุงูุขูู.',
      category: categories[1],
      tags: ['ุฏูุน', 'ุจุทุงูุฉ ุงุฆุชูุงู', 'ุฃูุงู', 'ุถูุงู'],
      isPublished: true,
      isPinned: true,
      viewCount: 2100,
      helpfulCount: 1850,
      notHelpfulCount: 120,
      relatedFAQs: ['5', '6'],
      attachments: [],
      metadata: {
        difficulty: 'beginner',
        estimatedReadTime: 3,
        lastReviewed: new Date(),
        reviewedBy: 'admin'
      },
      searchKeywords: ['ุฏูุน', 'ุจุทุงูุฉ', 'ุฃูุงู', 'ุถูุงู', 'paypal'],
      createdBy: 'admin',
      createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 25),
      updatedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 3),
      publishedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 25)
    },
    {
      id: '3',
      question: 'ูุง ูู ูุธุงู ุชุจุงุฏู ุงูููุช ููุงุจู ุงูุฎุฏูุฉุ',
      answer: 'ูุธุงู ุชุจุงุฏู ุงูููุช ูู ููุฒุฉ ูุฑูุฏุฉ ูู ููุตุชูุง ุชุชูุญ ูููุณุชุฎุฏููู ุชุจุงุฏู ุงูุฎุฏูุงุช ุฏูู ุงุณุชุฎุฏุงู ุงููุงู. ุจุฏูุงู ูู ุฐููุ ููููู:\n\nโข **ุชูุฏูู ุฎุฏูุฉ**: ููุงุจู ุณุงุนุงุช ูู ููุชู\nโข **ุงูุญุตูู ุนูู ุฎุฏูุฉ**: ุจุงุณุชุฎุฏุงู ุงูุณุงุนุงุช ุงููุชุฑุงููุฉ ูุฏูู\nโข **ุจูุงุก ุดุจูุฉ**: ูู ุงูุนูุงูุงุช ุงูููููุฉ ูุงูุดุฎุตูุฉ\n\nูุซุงู: ุฅุฐุง ูุฏูุช 5 ุณุงุนุงุช ูู ุงูุชุตูููุ ููููู ุงูุญุตูู ุนูู 5 ุณุงุนุงุช ูู ุงูุจุฑูุฌุฉ ูู ูุณุชูู ุขุฎุฑ.',
      category: categories[2],
      tags: ['ุชุจุงุฏู ููุช', 'ูุธุงู ูุฑูุฏ', 'ุณุงุนุงุช', 'ููุงูุถุฉ'],
      isPublished: true,
      isPinned: true,
      viewCount: 3200,
      helpfulCount: 2800,
      notHelpfulCount: 180,
      relatedFAQs: ['4', '7'],
      attachments: [],
      metadata: {
        difficulty: 'intermediate',
        estimatedReadTime: 4,
        lastReviewed: new Date(),
        reviewedBy: 'admin'
      },
      searchKeywords: ['ุชุจุงุฏู', 'ููุช', 'ุณุงุนุงุช', 'ููุงูุถุฉ', 'ุฎุฏูุฉ'],
      createdBy: 'admin',
      createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 20),
      updatedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 2),
      publishedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 20)
    },
    {
      id: '4',
      question: 'ููู ุฃุฎุชุงุฑ ุงููุณุชูู ุงูููุงุณุจ ููุดุฑูุนูุ',
      answer: 'ุงุฎุชูุงุฑ ุงููุณุชูู ุงูููุงุณุจ ุฃูุฑ ููู ููุฌุงุญ ูุดุฑูุนู. ุฅููู ุฃูู ุงููุตุงุฆุญ:\n\n**1. ุฑุงุฌุน ุงูููู ุงูุดุฎุตู:**\nโข ุงูุชููููุงุช ูุงููุฑุงุฌุนุงุช\nโข ูุนุฑุถ ุงูุฃุนูุงู ุงูุณุงุจูุฉ\nโข ุงูููุงุฑุงุช ูุงูุฎุจุฑุงุช\nโข ูุนุฏู ุงูุงุณุชุฌุงุจุฉ\n\n**2. ุชุญูู ูู ุงูุชูุงูู:**\nโข ุงูููุฒุงููุฉ ูุงูุฌุฏูู ุงูุฒููู\nโข ุฃุณููุจ ุงูุชูุงุตู\nโข ููู ุงููุชุทูุจุงุช\n\n**3. ุงุจุฏุฃ ุจูุดุฑูุน ุตุบูุฑ:**\nโข ุงุฎุชุจุฑ ุฌูุฏุฉ ุงูุนูู\nโข ููู ุงูุงูุชุฒุงู ุจุงูููุงุนูุฏ\nโข ุชุฃูุฏ ูู ุงูุชูุงุตู ุงููุนุงู',
      category: categories[3],
      tags: ['ุงุฎุชูุงุฑ ูุณุชูู', 'ุชูููู', 'ูุดุฑูุน', 'ูุตุงุฆุญ'],
      isPublished: true,
      isPinned: false,
      viewCount: 1800,
      helpfulCount: 1600,
      notHelpfulCount: 95,
      relatedFAQs: ['3', '8'],
      attachments: [],
      metadata: {
        difficulty: 'intermediate',
        estimatedReadTime: 5,
        lastReviewed: new Date(),
        reviewedBy: 'admin'
      },
      searchKeywords: ['ุงุฎุชูุงุฑ', 'ูุณุชูู', 'ุชูููู', 'ูุดุฑูุน', 'ูุตุงุฆุญ'],
      createdBy: 'admin',
      createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 15),
      updatedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 1),
      publishedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 15)
    },
    {
      id: '5',
      question: 'ูุงุฐุง ุฃูุนู ูู ุญุงูุฉ ูุฌูุฏ ูุฒุงุนุ',
      answer: 'ูู ุญุงูุฉ ูุฌูุฏ ูุฒุงุนุ ูููุฑ ูุธุงู ูุณุงุทุฉ ูุชูุฏู ูุญู ุงููุดุงูู:\n\n**ุฎุทูุงุช ุญู ุงููุฒุงุน:**\n\n1. **ุงูุชูุงุตู ุงููุจุงุดุฑ**: ุญุงูู ุญู ุงููุดููุฉ ูุน ุงูุทุฑู ุงูุขุฎุฑ ุฃููุงู\n2. **ูุชุญ ูุฒุงุน**: ุฅุฐุง ูู ูุชู ุงูุญูุ ุงูุชุญ ูุฒุงุน ุฑุณูู\n3. **ุชูุฏูู ุงูุฃุฏูุฉ**: ุฃุฑูู ุฌููุน ุงููุซุงุฆู ูุงููุฑุงุณูุงุช\n4. **ุงููุณุงุทุฉ**: ุณูุชุฏุฎู ูุฑูู ุงููุณุงุทุฉ ูุฏููุง\n5. **ุงููุฑุงุฑ ุงูููุงุฆู**: ุณูุชู ุงุชุฎุงุฐ ูุฑุงุฑ ุนุงุฏู ุฎูุงู 5-7 ุฃูุงู\n\n**ูุตุงุฆุญ ูุชุฌูุจ ุงููุฒุงุนุงุช:**\nโข ูุถุน ูุชุทูุจุงุช ูุงุถุญุฉ\nโข ุงูุชูุงุตู ุงููุณุชูุฑ\nโข ุชูุซูู ูู ุดูุก\nโข ุงุณุชุฎุฏุงู ูุธุงู ุงูุถูุงู',
      category: categories[4],
      tags: ['ูุฒุงุน', 'ูุณุงุทุฉ', 'ุญู ูุดุงูู', 'ุถูุงู'],
      isPublished: true,
      isPinned: false,
      viewCount: 950,
      helpfulCount: 820,
      notHelpfulCount: 65,
      relatedFAQs: ['2', '6'],
      attachments: [],
      metadata: {
        difficulty: 'advanced',
        estimatedReadTime: 6,
        lastReviewed: new Date(),
        reviewedBy: 'admin'
      },
      searchKeywords: ['ูุฒุงุน', 'ูุณุงุทุฉ', 'ูุดููุฉ', 'ุญู', 'ุถูุงู'],
      createdBy: 'admin',
      createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 10),
      updatedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 1),
      publishedAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 10)
    }
  ]);

  // ุจูุงูุงุช ููููุฉ ููุงุนุฏุฉ ุงููุนุฑูุฉ
  const [knowledgeBase] = useState<SupportKnowledgeBase[]>([
    {
      id: '1',
      title: 'ุฏููู ุงููุจุชุฏุฆูู ุงูุดุงูู',
      content: 'ุฏููู ุดุงูู ูููุจุชุฏุฆูู ูู ุงุณุชุฎุฏุงู ุงูููุตุฉ...',
      summary: 'ุชุนูู ููููุฉ ุงุณุชุฎุฏุงู ุฌููุน ููุฒุงุช ุงูููุตุฉ ุฎุทูุฉ ุจุฎุทูุฉ',
      category: 'getting-started',
      tags: ['ุฏููู', 'ูุจุชุฏุฆูู', 'ุดุงูู'],
      difficulty: 'beginner',
      type: 'guide',
      status: 'published',
      isPublic: true,
      viewCount: 5200,
      rating: 4.8,
      ratingCount: 320,
      estimatedReadTime: 15,
      attachments: [],
      relatedArticles: ['2', '3'],
      prerequisites: [],
      lastReviewed: new Date(),
      reviewedBy: 'admin',
      createdBy: 'admin',
      createdAt: new Date(),
      updatedAt: new Date(),
      publishedAt: new Date()
    }
  ]);

  const filteredFAQs = faqs.filter(faq => {
    const matchesSearch = !searchTerm || 
      faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
      faq.answer.toLowerCase().includes(searchTerm.toLowerCase()) ||
      faq.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));
    
    const matchesCategory = selectedCategory === 'all' || faq.category.id === selectedCategory;
    const matchesDifficulty = selectedDifficulty === 'all' || faq.metadata.difficulty === selectedDifficulty;
    
    return matchesSearch && matchesCategory && matchesDifficulty && faq.isPublished;
  });

  const sortedFAQs = [...filteredFAQs].sort((a, b) => {
    switch (sortBy) {
      case 'popularity':
        return b.viewCount - a.viewCount;
      case 'recent':
        return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();
      case 'helpful':
        return (b.helpfulCount / (b.helpfulCount + b.notHelpfulCount)) - 
               (a.helpfulCount / (a.helpfulCount + a.notHelpfulCount));
      default:
        return a.isPinned === b.isPinned ? 0 : a.isPinned ? -1 : 1;
    }
  });

  const handleFAQFeedback = (faqId: string, isHelpful: boolean) => {
    // ููุง ูููู ุฅุฑุณุงู ุงูุชูููู ุฅูู ุงูุฎุงุฏู
    console.log(`FAQ ${faqId} marked as ${isHelpful ? 'helpful' : 'not helpful'}`);
  };

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'beginner': return 'text-green-600 bg-green-100';
      case 'intermediate': return 'text-yellow-600 bg-yellow-100';
      case 'advanced': return 'text-red-600 bg-red-100';
      default: return 'text-gray-600 bg-gray-100';
    }
  };

  const getDifficultyText = (difficulty: string) => {
    switch (difficulty) {
      case 'beginner': return 'ูุจุชุฏุฆ';
      case 'intermediate': return 'ูุชูุณุท';
      case 'advanced': return 'ูุชูุฏู';
      default: return difficulty;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex items-center justify-center mb-4">
            <div className="p-3 bg-[#2E86AB] rounded-full">
              <HelpCircle className="h-8 w-8 text-white" />
            </div>
          </div>
          <h1 className="text-4xl font-bold text-gray-900 mb-4">ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ</h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            ุงุจุญุซ ุนู ุฅุฌุงุจุงุช ููุฃุณุฆูุฉ ุงูุฃูุซุฑ ุดููุนุงู ุฃู ุชุตูุญ ุงููุฆุงุช ููุนุซูุฑ ุนูู ูุง ุชุญุชุงุฌู
          </p>
        </div>

        {/* Search Bar */}
        <div className="max-w-2xl mx-auto mb-8">
          <div className="relative">
            <Search className="absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-6 w-6" />
            <input
              type="text"
              placeholder="ุงุจุญุซ ูู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full pr-12 pl-4 py-4 text-lg border border-gray-300 rounded-xl focus:ring-2 focus:ring-[#2E86AB] focus:border-transparent shadow-sm"
            />
          </div>
        </div>

        {/* Quick Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-[#2E86AB] mb-2">
              {faqs.filter(f => f.isPublished).length}
            </div>
            <div className="text-gray-600">ุณุคุงู ูุฌูุงุจ</div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-green-600 mb-2">
              {categories.length}
            </div>
            <div className="text-gray-600">ูุฆุฉ</div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-purple-600 mb-2">
              {knowledgeBase.length}
            </div>
            <div className="text-gray-600">ููุงู ูุณุงุนุฏุฉ</div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6 text-center">
            <div className="text-3xl font-bold text-orange-600 mb-2">
              {Math.round(faqs.reduce((acc, faq) => acc + (faq.helpfulCount / (faq.helpfulCount + faq.notHelpfulCount)), 0) / faqs.length * 100)}%
            </div>
            <div className="text-gray-600">ูุนุฏู ุงูุฑุถุง</div>
          </div>
        </div>

        {/* Categories */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">ุชุตูุญ ุญุณุจ ุงููุฆุฉ</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {categories.map(category => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`p-6 rounded-xl border-2 transition-all text-right hover:shadow-lg ${
                  selectedCategory === category.id
                    ? 'border-[#2E86AB] bg-blue-50'
                    : 'border-gray-200 bg-white hover:border-gray-300'
                }`}
              >
                <div className="flex items-center gap-4 mb-3">
                  <span className="text-3xl">{category.icon}</span>
                  <div className="flex-1">
                    <h3 className="text-lg font-semibold text-gray-900">{category.name}</h3>
                    <p className="text-sm text-gray-600">{category.description}</p>
                  </div>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-500">{category.faqCount} ุณุคุงู</span>
                  <ArrowRight className="h-4 w-4 text-gray-400" />
                </div>
              </button>
            ))}
          </div>
        </div>

        {/* Filters and Controls */}
        <div className="bg-white rounded-lg shadow-sm p-4 mb-6">
          <div className="flex flex-col sm:flex-row items-center justify-between gap-4">
            <div className="flex items-center gap-4">
              <button
                onClick={() => setShowFilters(!showFilters)}
                className="flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50"
              >
                <Filter className="h-4 w-4" />
                ููุงุชุฑ
              </button>
              
              <select
                value={selectedDifficulty}
                onChange={(e) => setSelectedDifficulty(e.target.value)}
                className="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#2E86AB] focus:border-transparent"
              >
                <option value="all">ุฌููุน ุงููุณุชููุงุช</option>
                <option value="beginner">ูุจุชุฏุฆ</option>
                <option value="intermediate">ูุชูุณุท</option>
                <option value="advanced">ูุชูุฏู</option>
              </select>

              <select
                value={sortBy}
                onChange={(e) => setSortBy(e.target.value as any)}
                className="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#2E86AB] focus:border-transparent"
              >
                <option value="relevance">ุงูุฃูุซุฑ ุตูุฉ</option>
                <option value="popularity">ุงูุฃูุซุฑ ุดุนุจูุฉ</option>
                <option value="recent">ุงูุฃุญุฏุซ</option>
                <option value="helpful">ุงูุฃูุซุฑ ูุงุฆุฏุฉ</option>
              </select>
            </div>

            <div className="flex items-center gap-2">
              <span className="text-sm text-gray-600">
                {filteredFAQs.length} ูู {faqs.length} ุณุคุงู
              </span>
              <div className="flex items-center border border-gray-300 rounded-lg">
                <button
                  onClick={() => setViewMode('list')}
                  className={`p-2 ${viewMode === 'list' ? 'bg-[#2E86AB] text-white' : 'text-gray-500'}`}
                >
                  <List className="h-4 w-4" />
                </button>
                <button
                  onClick={() => setViewMode('grid')}
                  className={`p-2 ${viewMode === 'grid' ? 'bg-[#2E86AB] text-white' : 'text-gray-500'}`}
                >
                  <Grid className="h-4 w-4" />
                </button>
              </div>
            </div>
          </div>

          {showFilters && (
            <div className="mt-4 pt-4 border-t border-gray-200">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ุงููุฆุฉ</label>
                  <select
                    value={selectedCategory}
                    onChange={(e) => setSelectedCategory(e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#2E86AB] focus:border-transparent"
                  >
                    <option value="all">ุฌููุน ุงููุฆุงุช</option>
                    {categories.map(category => (
                      <option key={category.id} value={category.id}>
                        {category.name}
                      </option>
                    ))}
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ููุช ุงููุฑุงุกุฉ</label>
                  <select className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#2E86AB] focus:border-transparent">
                    <option value="all">ุฃู ูุฏุฉ</option>
                    <option value="quick">ุณุฑูุน (ุฃูู ูู 3 ุฏูุงุฆู)</option>
                    <option value="medium">ูุชูุณุท (3-7 ุฏูุงุฆู)</option>
                    <option value="long">ุทููู (ุฃูุซุฑ ูู 7 ุฏูุงุฆู)</option>
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ุงูุชูููู</label>
                  <select className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#2E86AB] focus:border-transparent">
                    <option value="all">ุฌููุน ุงูุชููููุงุช</option>
                    <option value="high">ุนุงูู (ุฃูุซุฑ ูู 90%)</option>
                    <option value="medium">ูุชูุณุท (70-90%)</option>
                    <option value="low">ููุฎูุถ (ุฃูู ูู 70%)</option>
                  </select>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* FAQs List */}
        <div className="space-y-4">
          {sortedFAQs.map(faq => (
            <div key={faq.id} className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
              <button
                onClick={() => setExpandedFAQ(expandedFAQ === faq.id ? null : faq.id)}
                className="w-full p-6 text-right hover:bg-gray-50 transition-colors"
              >
                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      {faq.isPinned && (
                        <span className="px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded-full flex items-center gap-1">
                          <Star className="h-3 w-3" />
                          ูุซุจุช
                        </span>
                      )}
                      <span className={`px-2 py-1 text-xs rounded-full ${getDifficultyColor(faq.metadata.difficulty)}`}>
                        {getDifficultyText(faq.metadata.difficulty)}
                      </span>
                      <span className="text-xs text-gray-500 flex items-center gap-1">
                        <Clock className="h-3 w-3" />
                        {faq.metadata.estimatedReadTime} ุฏูููุฉ
                      </span>
                    </div>
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">{faq.question}</h3>
                    <div className="flex items-center gap-4 text-sm text-gray-500">
                      <span className="flex items-center gap-1">
                        <Eye className="h-4 w-4" />
                        {faq.viewCount.toLocaleString()}
                      </span>
                      <span className="flex items-center gap-1">
                        <ThumbsUp className="h-4 w-4" />
                        {Math.round((faq.helpfulCount / (faq.helpfulCount + faq.notHelpfulCount)) * 100)}%
                      </span>
                      <span className="px-2 py-1 bg-gray-100 rounded-full text-xs">
                        {faq.category.name}
                      </span>
                    </div>
                  </div>
                  <div className="mr-4">
                    {expandedFAQ === faq.id ? (
                      <ChevronUp className="h-5 w-5 text-gray-400" />
                    ) : (
                      <ChevronDown className="h-5 w-5 text-gray-400" />
                    )}
                  </div>
                </div>
              </button>

              {expandedFAQ === faq.id && (
                <div className="px-6 pb-6 border-t border-gray-100">
                  <div className="prose prose-lg max-w-none text-gray-700 mb-6">
                    {faq.answer.split('\n').map((paragraph, index) => (
                      <p key={index} className="mb-4 leading-relaxed">
                        {paragraph}
                      </p>
                    ))}
                  </div>

                  {faq.tags.length > 0 && (
                    <div className="flex items-center gap-2 mb-4">
                      <Tag className="h-4 w-4 text-gray-400" />
                      <div className="flex flex-wrap gap-2">
                        {faq.tags.map(tag => (
                          <span key={tag} className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full">
                            {tag}
                          </span>
                        ))}
                      </div>
                    </div>
                  )}

                  <div className="flex items-center justify-between pt-4 border-t border-gray-100">
                    <div className="flex items-center gap-4">
                      <span className="text-sm text-gray-600">ูู ูุงูุช ูุฐู ุงูุฅุฌุงุจุฉ ูููุฏุฉุ</span>
                      <div className="flex items-center gap-2">
                        <button
                          onClick={() => handleFAQFeedback(faq.id, true)}
                          className="flex items-center gap-1 px-3 py-1 text-sm text-green-600 hover:bg-green-50 rounded-lg transition-colors"
                        >
                          <ThumbsUp className="h-4 w-4" />
                          ูุนู ({faq.helpfulCount})
                        </button>
                        <button
                          onClick={() => handleFAQFeedback(faq.id, false)}
                          className="flex items-center gap-1 px-3 py-1 text-sm text-red-600 hover:bg-red-50 rounded-lg transition-colors"
                        >
                          <ThumbsDown className="h-4 w-4" />
                          ูุง ({faq.notHelpfulCount})
                        </button>
                      </div>
                    </div>

                    <div className="flex items-center gap-2">
                      <button className="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-50">
                        <Share2 className="h-4 w-4" />
                      </button>
                      <button className="p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-50">
                        <Bookmark className="h-4 w-4" />
                      </button>
                    </div>
                  </div>

                  {faq.relatedFAQs.length > 0 && (
                    <div className="mt-6 pt-4 border-t border-gray-100">
                      <h4 className="text-sm font-medium text-gray-900 mb-3">ุฃุณุฆูุฉ ุฐุงุช ุตูุฉ:</h4>
                      <div className="space-y-2">
                        {faq.relatedFAQs.slice(0, 3).map(relatedId => {
                          const relatedFAQ = faqs.find(f => f.id === relatedId);
                          return relatedFAQ ? (
                            <button
                              key={relatedId}
                              onClick={() => setExpandedFAQ(relatedId)}
                              className="block w-full text-right p-3 text-sm text-[#2E86AB] hover:bg-blue-50 rounded-lg transition-colors"
                            >
                              {relatedFAQ.question}
                            </button>
                          ) : null;
                        })}
                      </div>
                    </div>
                  )}
                </div>
              )}
            </div>
          ))}
        </div>

        {filteredFAQs.length === 0 && (
          <div className="text-center py-12">
            <div className="p-4 bg-gray-100 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center">
              <Search className="h-8 w-8 text-gray-400" />
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">ูู ูุฌุฏ ุฃู ูุชุงุฆุฌ</h3>
            <p className="text-gray-600 mb-6">ุฌุฑุจ ุชุบููุฑ ูููุงุช ุงูุจุญุซ ุฃู ุงูููุงุชุฑ</p>
            <button
              onClick={() => setActivePage('support')}
              className="px-6 py-3 bg-[#2E86AB] text-white rounded-lg hover:bg-[#1e5f7a] transition-colors"
            >
              ุชูุงุตู ูุน ุงูุฏุนู
            </button>
          </div>
        )}

        {/* Knowledge Base Section */}
        {knowledgeBase.length > 0 && (
          <div className="mt-12">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-2xl font-bold text-gray-900">ููุงูุงุช ูููุฏุฉ</h2>
              <button className="text-[#2E86AB] hover:text-[#1e5f7a] font-medium">
                ุนุฑุถ ุงููู
              </button>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {knowledgeBase.slice(0, 3).map(article => (
                <div key={article.id} className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                  <div className="flex items-center gap-2 mb-3">
                    <BookOpen className="h-5 w-5 text-[#2E86AB]" />
                    <span className={`px-2 py-1 text-xs rounded-full ${getDifficultyColor(article.difficulty)}`}>
                      {getDifficultyText(article.difficulty)}
                    </span>
                  </div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">{article.title}</h3>
                  <p className="text-gray-600 mb-4">{article.summary}</p>
                  <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
                    <span className="flex items-center gap-1">
                      <Clock className="h-4 w-4" />
                      {article.estimatedReadTime} ุฏูููุฉ
                    </span>
                    <span className="flex items-center gap-1">
                      <Star className="h-4 w-4 text-yellow-400" />
                      {article.rating}
                    </span>
                  </div>
                  <button className="w-full px-4 py-2 bg-[#2E86AB] text-white rounded-lg hover:bg-[#1e5f7a] transition-colors">
                    ูุฑุงุกุฉ ุงูููุงู
                  </button>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Contact Support */}
        <div className="mt-12 bg-gradient-to-r from-[#2E86AB] to-[#1e5f7a] rounded-xl p-8 text-center text-white">
          <MessageCircle className="h-12 w-12 mx-auto mb-4" />
          <h2 className="text-2xl font-bold mb-4">ูู ุชุฌุฏ ูุง ุชุจุญุซ ุนููุ</h2>
          <p className="text-lg mb-6 opacity-90">
            ูุฑูู ุงูุฏุนู ูุฏููุง ูุชุงุญ ุนูู ูุฏุงุฑ ุงูุณุงุนุฉ ููุณุงุนุฏุชู
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button
              onClick={() => setActivePage('support')}
              className="px-6 py-3 bg-white text-[#2E86AB] rounded-lg hover:bg-gray-100 transition-colors font-medium"
            >
              ุชูุงุตู ูุน ุงูุฏุนู
            </button>
            <button className="px-6 py-3 border border-white text-white rounded-lg hover:bg-white hover:bg-opacity-10 transition-colors font-medium">
              ุฏุฑุฏุดุฉ ูุจุงุดุฑุฉ
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default FAQPage;

